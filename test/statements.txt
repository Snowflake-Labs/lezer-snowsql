# Commit

commit;

==> 

SnowSQL(Stmts(Stmt(CommitStmt(Commit)),Smc))


# Rollback

rollback;

==> 

SnowSQL(Stmts(Stmt(RollbackStmt(Rollback)),Smc))


# Truncate table

truncate table if exists foobar;

==> 

SnowSQL(Stmts(Stmt(TruncateStmt(Truncate,Table,IfExists(If,Exists),ObjName(IdentifierExt(Identifier)))),Smc))


# Truncate materialized view

truncate materialized view val;

==> 

SnowSQL(Stmts(Stmt(TruncateStmt(Truncate,Materialized,View,ObjName(IdentifierExt(Identifier)))),Smc))


# Use database with variable

use database identifier($database);

==>

SnowSQL(Stmts(Stmt(UseStmt(Use,Database,ObjName(IdentifierKW,Lparen,IdentifierVar,Rparen))),Smc))


# Use database 

use database foobar;

==>

SnowSQL(Stmts(Stmt(UseStmt(Use,Database,ObjName(IdentifierExt(Identifier)))),Smc))


# Use role

Use role foobar;

==>

SnowSQL(Stmts(Stmt(UseStmt(Use,Role,ObjName(IdentifierExt(Identifier)))),Smc))


# Use Schema

use schema foo;

==>

SnowSQL(Stmts(Stmt(UseStmt(Use,Schema,ObjName(IdentifierExt(Identifier)))),Smc))


# Use schema with db 

use foo.bar;

==> 

SnowSQL(Stmts(Stmt(UseStmt(Use,ObjName(IdentifierExt(Identifier),Dot,IdentifierExt(Identifier)))),Smc))


# Use warehouse

use warehouse foo;

==>

SnowSQL(Stmts(Stmt(UseStmt(Use,Warehouse,ObjName(IdentifierExt(Identifier)))),Smc))


# Grant ownership on


grant ownership on integration foo_bar_foobar_barfoo TO ROLE foobar_foo_bar_barfoos;

==>

SnowSQL(Stmts(Stmt(GrantPrivilegesStmt(Grant,PrivilegePrefix(Ownership),On,PrivilegeObj(PrivilegeObjectType(Integration),ObjName(IdentifierExt(Identifier))),To,Role,ObjName(IdentifierExt(Identifier)))),Smc))

# Grant usage on 

GRANT USAGE ON INTEGRATION gcp_security_logs TO ROLE security_engineer;

==>

SnowSQL(Stmts(Stmt(GrantPrivilegesStmt(Grant,PrivilegePrefix(Usage),On,PrivilegeObj(PrivilegeObjectType(Integration),ObjName(IdentifierExt(Identifier))),To,Role,ObjName(IdentifierExt(Identifier)))),Smc))

# Grant all privlegs on function

grant all privileges on function mydb.myschema.add5(number) to role analyst;
 
==>

SnowSQL(Stmts(Stmt(GrantPrivilegesStmt(Grant,PrivilegePrefix(All,Privileges),On,PrivilegeObj(PrivilegeObjectType(Function),ObjName(IdentifierExt(Identifier),Dot,IdentifierExt(Identifier),Dot,IdentifierExt(Identifier)),UdfTypeSig(Lparen,Types(NonUserDefinedType(NumberType(NumberAlias(Number)))),Rparen)),To,Role,ObjName(IdentifierExt(Identifier)))),Smc))

# Grant all privlegs on function

grant all privileges on function mydb.myschema.add5(number) to role analyst;
 
==>

SnowSQL(Stmts(Stmt(GrantPrivilegesStmt(Grant,PrivilegePrefix(All,Privileges),On,PrivilegeObj(PrivilegeObjectType(Function),ObjName(IdentifierExt(Identifier),Dot,IdentifierExt(Identifier),Dot,IdentifierExt(Identifier)),UdfTypeSig(Lparen,Types(NonUserDefinedType(NumberType(NumberAlias(Number)))),Rparen)),To,Role,ObjName(IdentifierExt(Identifier)))),Smc))



# Show terse 

show terse schemas in database foobar;

==>

SnowSQL(Stmts(Stmt(ShowStmt(Show,Terse,Schemas,ShowInClause(In,Database,ObjName(IdentifierExt(Identifier))))),Smc))


# Show with like 

show tables like 'myrole';

==>

SnowSQL(Stmts(Stmt(ShowStmt(Show,Tables,Like,StringLiteral)),Smc))

# Show with starts with option

show tables history like 'foo' in account starts with 'bar';

==>

SnowSQL(Stmts(Stmt(ShowStmt(Show,Tables,History,Like,StringLiteral,ShowInClause(In,ObjName(IdentifierExt(Identifier))),Starts,With,StringLiteral)),Smc))

# Multiple queries

select * from foo;
select foo, bar from foobar;
select foo from foobar where foobar = 11;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc,Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc,Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Eql,ExpressionA(IntegerLiteral)))))))),Smc))

# Insert into

insert into foobar (colA, colB, colC) values
    ('PosA', 'ObjA', 22), 
    ('PosB', 'ObjB', 99),
    ('PosC', 'ObjC', 91);

==>

SnowSQL(Stmts(Stmt(InsertStmt(Insert,Into,ObjName(IdentifierExt(Identifier)),Lparen,ColumnNameList(IdentifierExt(Identifier),Comma,IdentifierExt(Identifier),Comma,IdentifierExt(Identifier)),Rparen,InsertSource(ValuesDef(Values,ValueList(Lparen,ScalarExpression(ExpressionA(StringLiteral)),Comma,ScalarExpression(ExpressionA(StringLiteral)),Comma,ScalarExpression(ExpressionA(IntegerLiteral)),Rparen),Comma,ValueList(Lparen,ScalarExpression(ExpressionA(StringLiteral)),Comma,ScalarExpression(ExpressionA(StringLiteral)),Comma,ScalarExpression(ExpressionA(IntegerLiteral)),Rparen),Comma,ValueList(Lparen,ScalarExpression(ExpressionA(StringLiteral)),Comma,ScalarExpression(ExpressionA(StringLiteral)),Comma,ScalarExpression(ExpressionA(IntegerLiteral)),Rparen))))),Smc))


# Insert and select

insert into foobar (a, b) select a, b from barfoo;

==>

SnowSQL(Stmts(Stmt(InsertStmt(Insert,Into,ObjName(IdentifierExt(Identifier)),Lparen,ColumnNameList(IdentifierExt(Identifier),Comma,IdentifierExt(Identifier)),Rparen,InsertSource(QueryStatementExpression(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier)))))))))),Smc))


# Copy from stage

copy into foobar from @foo_bar_stage;

==>

SnowSQL(Stmts(Stmt(CopyStmt(Copy,Into,ObjName(IdentifierExt(Identifier)),From,URLDefinition(URLIdentifier(StageNameIdentifier(Atr,URLPathComponent))))),Smc))

# Continues on new Line

select
*
from
foobar 
where 
foo
< 
4;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Lss,ExpressionA(IntegerLiteral)))))))),Smc))

# No semicolon

describe table val

==>

SnowSQL(Stmts(Stmt(DescribeStmt(Describe,Table,ObjName(IdentifierExt(Identifier))))))

# Empty statement

;

==>

SnowSQL(Stmts(Smc))


# Line comment

-- a comment here

==>

SnowSQL(Stmts,LineComment)

# Block comment

/*
a
comment
here
*/

==>

SnowSQL(Stmts,BlockComment)



# Comments between statments

select * from foobar;
-- a comment here
select * from val;
-- a comment here


==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc,LineComment,Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc),LineComment)