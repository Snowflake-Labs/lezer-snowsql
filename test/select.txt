# Simple select statement

select * from foo;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc))

# Select with fields

select foo, bar from foobar;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc))


# Select with where

select foo from foobar where foobar = 11;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Eql,ExpressionA(IntegerLiteral)))))))),Smc))


# Select with basic arithmetic expression

select foo,bar from foobar where (foo + bar) > 3;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(Lparen,ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Plus,ExpressionA(ObjName(IdentifierExt(Identifier)))),Rparen),Gtr,ExpressionA(IntegerLiteral)))))))),Smc))

# Select number 

select 1;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(IntegerLiteral)))))))),Smc))


# Select with basic arithmetic expression without parentheses

select foo,bar from foobar where foo + bar > 3;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Plus,ExpressionA(ObjName(IdentifierExt(Identifier)))),Gtr,ExpressionA(IntegerLiteral)))))))),Smc))


# Select with where and string

select foo, bar from foobar;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc))


# Select with where and gte operator

select foo from foobar where foo >= 50;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Gte,ExpressionA(IntegerLiteral)))))))),Smc))

# Select with union

select colA from foo
union all
select colA from bar
group by val;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))))),Union,All,SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),GroupByClause(Group,By,GroupByExpression(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))))))))),Smc))

# Select with intersect

select colA from foo
intersect
select colA from bar
order by id;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))))),Intersect,SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),OrderByClause(Order,By,ColumnRefOrder(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))))))))),Smc))

# Nested select statement

select foo,bar from foobar where bar in (select foobar from foo WHERE barfoo = 'foobar'); 

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),In,Inexpression(ParenSelect(Lparen,SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Eql,ExpressionA(StringLiteral)))))),Rparen))))))))),Smc))

# With clause

with 
  foo as (select count(*) num, val
                from emp
                group by val)
select dname d, loc l, num n
from bar, foo
where bar.val = foo.val;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(WithClause(With,WithItem(WithIdentifier(IdentifierExt(Identifier)),As,WithExpression(Lparen,QueryStatementExpression(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(FunctionCall(ObjName(IdentifierExt(Identifier)),Lparen,FunctionArgs(Star),Rparen))),IdentifierExt(Identifier)),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),GroupByClause(Group,By,GroupByExpression(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))))))),Rparen))),SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))),IdentifierExt(Identifier)),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))),IdentifierExt(Identifier)),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))),IdentifierExt(Identifier))),FromClause(From,FromExpression(IdentifierExt(Identifier)),Comma,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier),Dot,IdentifierExt(Identifier))),Eql,ExpressionA(ObjName(IdentifierExt(Identifier),Dot,IdentifierExt(Identifier))))))))))),Smc))

# Basic RCTE

with cte
as (select 1 as n 
    union all
    select n + 1 
    from cte
    where  n < 50 
    )
select n
from cte;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(WithClause(With,WithItem(WithIdentifier(IdentifierExt(Identifier)),As,WithExpression(Lparen,QueryStatementExpression(SelectStmt(SelectDefinition(SelectBase(SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(IntegerLiteral)),As,IdentifierExt(Identifier))))),Union,All,SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Plus,ExpressionA(IntegerLiteral))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),WhereClause(Where,ScalarExpression(ExpressionA(ExpressionA(ObjName(IdentifierExt(Identifier))),Lss,ExpressionA(IntegerLiteral)))))))))),Rparen))),SelectClause(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier)))))))),Smc))


# Join with using

SELECT a.id, b.id
FROM my_table a
JOIN my_other_table b USING (q, w);

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier),Dot,IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier),Dot,IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier),AliasClause(IdentifierExt(Identifier)),JoinExpression(JoinKW(Join),ObjName(IdentifierExt(Identifier)),AliasClause(IdentifierExt(Identifier)),JoinSpecification(Using,Lparen,ColumnNames(Identifier,Comma,Identifier),Rparen)))))))),Smc))

# Join on condition

select * from foobar join barfoo on true;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier),JoinExpression(JoinKW(Join),ObjName(IdentifierExt(Identifier)),JoinSpecification(On,ScalarExpression(ExpressionA(BooleanValue(True))))))))))),Smc))

# limit clause

select *
from foo
order by bar desc
limit 99;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier))),OrderByClause(Order,By,ColumnRefOrder(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))),Desc)),LimitClause(Limit,LimitBoundary(ConstantBoundary(IntegerLiteral))))))),Smc))


# having clause

select a, b, c, d, e
from foobar
group by d
having count(d) < 59;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier))))),Comma,SelectTarget(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),FromClause(From,FromExpression(IdentifierExt(Identifier))),GroupByClause(Group,By,GroupByExpression(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),HavingClause(Having,ScalarExpression(ExpressionA(ExpressionA(FunctionCall(ObjName(IdentifierExt(Identifier)),Lparen,FunctionArgs(FunctionArgExpression(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),Rparen)),Lss,ExpressionA(IntegerLiteral)))))))),Smc))


# Select Max Aggregate function

select max(val) from foobar;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(ScalarExpression(ExpressionA(FunctionCall(ObjName(IdentifierExt(Identifier)),Lparen,FunctionArgs(FunctionArgExpression(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))),Rparen))))),FromClause(From,FromExpression(IdentifierExt(Identifier))))))),Smc))


# Order by clause

select * from tablefoo order by id;

==>

SnowSQL(Stmts(Stmt(SelectStmt(SelectDefinition(SelectBase(Select,SelectTargetList(SelectTarget(Star)),FromClause(From,FromExpression(IdentifierExt(Identifier))),OrderByClause(Order,By,ColumnRefOrder(ScalarExpression(ExpressionA(ObjName(IdentifierExt(Identifier)))))))))),Smc))